name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
          cache-key: ${{ matrix.node-version }}

      - name: Run linter
        run: npm run lint --if-present

      - name: Run tests
        run: npm test --if-present

      - name: Build package
        run: npm run build

      - name: Check package contents
        run: npm pack --dry-run

  publish:
    name: Publish to NPM
    needs: [test, security, integration-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "20.x"
          cache-key: "20.x"

      - name: Setup NPM registry
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"

      - name: Build package
        run: npm run build

      - name: Update package version
        run: npm version ${{ github.event.release.tag_name }} --no-git-tag-version

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: "20.x"
          cache-key: "20.x"

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for vulnerabilities
        run: npm audit --audit-level=moderate --production

  integration-test:
    name: Integration Test (Event Bus)
    runs-on: ubuntu-latest
    needs: [test, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js and Dependencies
        uses: ./.github/actions/setup-node
        with:
          node-version: '20.x'
          cache-key: '20.x'

      - name: Ensure artifacts directory exists
        run: mkdir -p integration-testing/artifacts

      - name: Build main library
        run: npm run build

      - name: Setup Pub/Sub Emulator
        uses: ./.github/actions/setup-pubsub

      - name: Setup and Start Services
        uses: ./.github/actions/setup-services

      - name: Run all integration event tests
        run: node integration-testing/ci/run-integration-tests.js

      - name: Upload artifacts for debugging (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-artifacts
          path: integration-testing/artifacts/
